// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace testpb {
	class TestChannelDataMessageDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestChannelDataMessage>
			_instance;
	} _TestChannelDataMessage_default_instance_;
	class TestAnyMessage_Type1DefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestAnyMessage_Type1>
			_instance;
	} _TestAnyMessage_Type1_default_instance_;
	class TestAnyMessage_Type2DefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestAnyMessage_Type2>
			_instance;
	} _TestAnyMessage_Type2_default_instance_;
	class TestAnyMessageDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestAnyMessage>
			_instance;
	} _TestAnyMessage_default_instance_;
	class TestMergeMessage_StringWrapperDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestMergeMessage_StringWrapper>
			_instance;
	} _TestMergeMessage_StringWrapper_default_instance_;
	class TestMergeMessage_KvEntry_DoNotUseDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestMergeMessage_KvEntry_DoNotUse>
			_instance;
	} _TestMergeMessage_KvEntry_DoNotUse_default_instance_;
	class TestMergeMessageDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestMergeMessage>
			_instance;
	} _TestMergeMessage_default_instance_;
	class TestMapMessage_KvEntry_DoNotUseDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestMapMessage_KvEntry_DoNotUse>
			_instance;
	} _TestMapMessage_KvEntry_DoNotUse_default_instance_;
	class TestMapMessage_StringWrapperDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestMapMessage_StringWrapper>
			_instance;
	} _TestMapMessage_StringWrapper_default_instance_;
	class TestMapMessage_Kv2Entry_DoNotUseDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestMapMessage_Kv2Entry_DoNotUse>
			_instance;
	} _TestMapMessage_Kv2Entry_DoNotUse_default_instance_;
	class TestMapMessageDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestMapMessage>
			_instance;
	} _TestMapMessage_default_instance_;
	class TestFieldMaskMessage_NestedMessageDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestFieldMaskMessage_NestedMessage>
			_instance;
	} _TestFieldMaskMessage_NestedMessage_default_instance_;
	class TestFieldMaskMessage_Kv1Entry_DoNotUseDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestFieldMaskMessage_Kv1Entry_DoNotUse>
			_instance;
	} _TestFieldMaskMessage_Kv1Entry_DoNotUse_default_instance_;
	class TestFieldMaskMessage_Kv2Entry_DoNotUseDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestFieldMaskMessage_Kv2Entry_DoNotUse>
			_instance;
	} _TestFieldMaskMessage_Kv2Entry_DoNotUse_default_instance_;
	class TestFieldMaskMessageDefaultTypeInternal {
	public:
		::google::protobuf::internal::ExplicitlyConstructed<TestFieldMaskMessage>
			_instance;
	} _TestFieldMaskMessage_default_instance_;
}  // namespace testpb
namespace protobuf_test_2eproto {
	void InitDefaultsTestChannelDataMessageImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestChannelDataMessage_default_instance_;
			new (ptr) ::testpb::TestChannelDataMessage();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestChannelDataMessage::InitAsDefaultInstance();
	}

	void InitDefaultsTestChannelDataMessage() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestChannelDataMessageImpl);
	}

	void InitDefaultsTestAnyMessage_Type1Impl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestAnyMessage_Type1_default_instance_;
			new (ptr) ::testpb::TestAnyMessage_Type1();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestAnyMessage_Type1::InitAsDefaultInstance();
	}

	void InitDefaultsTestAnyMessage_Type1() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestAnyMessage_Type1Impl);
	}

	void InitDefaultsTestAnyMessage_Type2Impl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestAnyMessage_Type2_default_instance_;
			new (ptr) ::testpb::TestAnyMessage_Type2();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestAnyMessage_Type2::InitAsDefaultInstance();
	}

	void InitDefaultsTestAnyMessage_Type2() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestAnyMessage_Type2Impl);
	}

	void InitDefaultsTestAnyMessageImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
		{
			void* ptr = &::testpb::_TestAnyMessage_default_instance_;
			new (ptr) ::testpb::TestAnyMessage();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestAnyMessage::InitAsDefaultInstance();
	}

	void InitDefaultsTestAnyMessage() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestAnyMessageImpl);
	}

	void InitDefaultsTestMergeMessage_StringWrapperImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestMergeMessage_StringWrapper_default_instance_;
			new (ptr) ::testpb::TestMergeMessage_StringWrapper();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestMergeMessage_StringWrapper::InitAsDefaultInstance();
	}

	void InitDefaultsTestMergeMessage_StringWrapper() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMergeMessage_StringWrapperImpl);
	}

	void InitDefaultsTestMergeMessage_KvEntry_DoNotUseImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_test_2eproto::InitDefaultsTestMergeMessage_StringWrapper();
		{
			void* ptr = &::testpb::_TestMergeMessage_KvEntry_DoNotUse_default_instance_;
			new (ptr) ::testpb::TestMergeMessage_KvEntry_DoNotUse();
		}
		::testpb::TestMergeMessage_KvEntry_DoNotUse::InitAsDefaultInstance();
	}

	void InitDefaultsTestMergeMessage_KvEntry_DoNotUse() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMergeMessage_KvEntry_DoNotUseImpl);
	}

	void InitDefaultsTestMergeMessageImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_test_2eproto::InitDefaultsTestMergeMessage_KvEntry_DoNotUse();
		{
			void* ptr = &::testpb::_TestMergeMessage_default_instance_;
			new (ptr) ::testpb::TestMergeMessage();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestMergeMessage::InitAsDefaultInstance();
	}

	void InitDefaultsTestMergeMessage() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMergeMessageImpl);
	}

	void InitDefaultsTestMapMessage_KvEntry_DoNotUseImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestMapMessage_KvEntry_DoNotUse_default_instance_;
			new (ptr) ::testpb::TestMapMessage_KvEntry_DoNotUse();
		}
		::testpb::TestMapMessage_KvEntry_DoNotUse::InitAsDefaultInstance();
	}

	void InitDefaultsTestMapMessage_KvEntry_DoNotUse() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMapMessage_KvEntry_DoNotUseImpl);
	}

	void InitDefaultsTestMapMessage_StringWrapperImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestMapMessage_StringWrapper_default_instance_;
			new (ptr) ::testpb::TestMapMessage_StringWrapper();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestMapMessage_StringWrapper::InitAsDefaultInstance();
	}

	void InitDefaultsTestMapMessage_StringWrapper() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMapMessage_StringWrapperImpl);
	}

	void InitDefaultsTestMapMessage_Kv2Entry_DoNotUseImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_test_2eproto::InitDefaultsTestMapMessage_StringWrapper();
		{
			void* ptr = &::testpb::_TestMapMessage_Kv2Entry_DoNotUse_default_instance_;
			new (ptr) ::testpb::TestMapMessage_Kv2Entry_DoNotUse();
		}
		::testpb::TestMapMessage_Kv2Entry_DoNotUse::InitAsDefaultInstance();
	}

	void InitDefaultsTestMapMessage_Kv2Entry_DoNotUse() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMapMessage_Kv2Entry_DoNotUseImpl);
	}

	void InitDefaultsTestMapMessageImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_test_2eproto::InitDefaultsTestMapMessage_KvEntry_DoNotUse();
		protobuf_test_2eproto::InitDefaultsTestMapMessage_Kv2Entry_DoNotUse();
		{
			void* ptr = &::testpb::_TestMapMessage_default_instance_;
			new (ptr) ::testpb::TestMapMessage();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestMapMessage::InitAsDefaultInstance();
	}

	void InitDefaultsTestMapMessage() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestMapMessageImpl);
	}

	void InitDefaultsTestFieldMaskMessage_NestedMessageImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestFieldMaskMessage_NestedMessage_default_instance_;
			new (ptr) ::testpb::TestFieldMaskMessage_NestedMessage();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestFieldMaskMessage_NestedMessage::InitAsDefaultInstance();
	}

	void InitDefaultsTestFieldMaskMessage_NestedMessage() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestFieldMaskMessage_NestedMessageImpl);
	}

	void InitDefaultsTestFieldMaskMessage_Kv1Entry_DoNotUseImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage_NestedMessage();
		{
			void* ptr = &::testpb::_TestFieldMaskMessage_Kv1Entry_DoNotUse_default_instance_;
			new (ptr) ::testpb::TestFieldMaskMessage_Kv1Entry_DoNotUse();
		}
		::testpb::TestFieldMaskMessage_Kv1Entry_DoNotUse::InitAsDefaultInstance();
	}

	void InitDefaultsTestFieldMaskMessage_Kv1Entry_DoNotUse() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestFieldMaskMessage_Kv1Entry_DoNotUseImpl);
	}

	void InitDefaultsTestFieldMaskMessage_Kv2Entry_DoNotUseImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		{
			void* ptr = &::testpb::_TestFieldMaskMessage_Kv2Entry_DoNotUse_default_instance_;
			new (ptr) ::testpb::TestFieldMaskMessage_Kv2Entry_DoNotUse();
		}
		::testpb::TestFieldMaskMessage_Kv2Entry_DoNotUse::InitAsDefaultInstance();
	}

	void InitDefaultsTestFieldMaskMessage_Kv2Entry_DoNotUse() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestFieldMaskMessage_Kv2Entry_DoNotUseImpl);
	}

	void InitDefaultsTestFieldMaskMessageImpl() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
		::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
		protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage_NestedMessage();
		protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage_Kv1Entry_DoNotUse();
		protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage_Kv2Entry_DoNotUse();
		{
			void* ptr = &::testpb::_TestFieldMaskMessage_default_instance_;
			new (ptr) ::testpb::TestFieldMaskMessage();
			::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
		}
		::testpb::TestFieldMaskMessage::InitAsDefaultInstance();
	}

	void InitDefaultsTestFieldMaskMessage() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestFieldMaskMessageImpl);
	}

	::google::protobuf::Metadata file_level_metadata[15];

	const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestChannelDataMessage, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestChannelDataMessage, text_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestChannelDataMessage, num_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestAnyMessage_Type1, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestAnyMessage_Type1, value_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestAnyMessage_Type2, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestAnyMessage_Type2, value_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestAnyMessage, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestAnyMessage, msg_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestAnyMessage, list_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage_StringWrapper, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage_StringWrapper, removed_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage_StringWrapper, content_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage_KvEntry_DoNotUse, _has_bits_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage_KvEntry_DoNotUse, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage_KvEntry_DoNotUse, key_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage_KvEntry_DoNotUse, value_),
	  0,
	  1,
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage, list_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMergeMessage, kv_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_KvEntry_DoNotUse, _has_bits_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_KvEntry_DoNotUse, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_KvEntry_DoNotUse, key_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_KvEntry_DoNotUse, value_),
	  0,
	  1,
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_StringWrapper, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_StringWrapper, content_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_StringWrapper, num_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_Kv2Entry_DoNotUse, _has_bits_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_Kv2Entry_DoNotUse, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_Kv2Entry_DoNotUse, key_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage_Kv2Entry_DoNotUse, value_),
	  0,
	  1,
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage, kv_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestMapMessage, kv2_),
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_NestedMessage, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_NestedMessage, p1_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_NestedMessage, p2_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv1Entry_DoNotUse, _has_bits_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv1Entry_DoNotUse, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv1Entry_DoNotUse, key_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv1Entry_DoNotUse, value_),
	  0,
	  1,
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv2Entry_DoNotUse, _has_bits_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv2Entry_DoNotUse, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv2Entry_DoNotUse, key_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage_Kv2Entry_DoNotUse, value_),
	  0,
	  1,
	  ~0u,  // no _has_bits_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage, name_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage, msg_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage, list_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage, kv1_),
	  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::testpb::TestFieldMaskMessage, kv2_),
	};
	static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
	  { 0, -1, sizeof(::testpb::TestChannelDataMessage)},
	  { 7, -1, sizeof(::testpb::TestAnyMessage_Type1)},
	  { 13, -1, sizeof(::testpb::TestAnyMessage_Type2)},
	  { 19, -1, sizeof(::testpb::TestAnyMessage)},
	  { 26, -1, sizeof(::testpb::TestMergeMessage_StringWrapper)},
	  { 33, 40, sizeof(::testpb::TestMergeMessage_KvEntry_DoNotUse)},
	  { 42, -1, sizeof(::testpb::TestMergeMessage)},
	  { 49, 56, sizeof(::testpb::TestMapMessage_KvEntry_DoNotUse)},
	  { 58, -1, sizeof(::testpb::TestMapMessage_StringWrapper)},
	  { 65, 72, sizeof(::testpb::TestMapMessage_Kv2Entry_DoNotUse)},
	  { 74, -1, sizeof(::testpb::TestMapMessage)},
	  { 81, -1, sizeof(::testpb::TestFieldMaskMessage_NestedMessage)},
	  { 88, 95, sizeof(::testpb::TestFieldMaskMessage_Kv1Entry_DoNotUse)},
	  { 97, 104, sizeof(::testpb::TestFieldMaskMessage_Kv2Entry_DoNotUse)},
	  { 106, -1, sizeof(::testpb::TestFieldMaskMessage)},
	};

	static ::google::protobuf::Message const* const file_default_instances[] = {
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestChannelDataMessage_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestAnyMessage_Type1_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestAnyMessage_Type2_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestAnyMessage_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestMergeMessage_StringWrapper_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestMergeMessage_KvEntry_DoNotUse_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestMergeMessage_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestMapMessage_KvEntry_DoNotUse_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestMapMessage_StringWrapper_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestMapMessage_Kv2Entry_DoNotUse_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestMapMessage_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestFieldMaskMessage_NestedMessage_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestFieldMaskMessage_Kv1Entry_DoNotUse_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestFieldMaskMessage_Kv2Entry_DoNotUse_default_instance_),
	  reinterpret_cast<const ::google::protobuf::Message*>(&::testpb::_TestFieldMaskMessage_default_instance_),
	};

	void protobuf_AssignDescriptors() {
		AddDescriptors();
		::google::protobuf::MessageFactory* factory = NULL;
		AssignDescriptors(
			"test.proto", schemas, file_default_instances, TableStruct::offsets, factory,
			file_level_metadata, NULL, NULL);
	}

	void protobuf_AssignDescriptorsOnce() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
	}

	void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
	void protobuf_RegisterTypes(const ::std::string&) {
		protobuf_AssignDescriptorsOnce();
		::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
	}

	void AddDescriptorsImpl() {
		InitDefaults();
		static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
			"\n\ntest.proto\022\006testpb\032\031google/protobuf/an"
			"y.proto\"3\n\026TestChannelDataMessage\022\014\n\004tex"
			"t\030\001 \001(\t\022\013\n\003num\030\002 \001(\r\"\207\001\n\016TestAnyMessage\022"
			"!\n\003msg\030\001 \001(\0132\024.google.protobuf.Any\022\"\n\004li"
			"st\030\002 \003(\0132\024.google.protobuf.Any\032\026\n\005Type1\022"
			"\r\n\005value\030\001 \001(\t\032\026\n\005Type2\022\r\n\005value\030\001 \001(\003\"\324"
			"\001\n\020TestMergeMessage\022\014\n\004list\030\001 \003(\t\022,\n\002kv\030"
			"\002 \003(\0132 .testpb.TestMergeMessage.KvEntry\032"
			"1\n\rStringWrapper\022\017\n\007removed\030\001 \001(\010\022\017\n\007con"
			"tent\030\002 \001(\t\032Q\n\007KvEntry\022\013\n\003key\030\001 \001(\003\0225\n\005va"
			"lue\030\002 \001(\0132&.testpb.TestMergeMessage.Stri"
			"ngWrapper:\0028\001\"\226\002\n\016TestMapMessage\022*\n\002kv\030\001"
			" \003(\0132\036.testpb.TestMapMessage.KvEntry\022,\n\003"
			"kv2\030\002 \003(\0132\037.testpb.TestMapMessage.Kv2Ent"
			"ry\032)\n\007KvEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001("
			"\t:\0028\001\032-\n\rStringWrapper\022\017\n\007content\030\001 \001(\t\022"
			"\013\n\003num\030\002 \001(\003\032P\n\010Kv2Entry\022\013\n\003key\030\001 \001(\r\0223\n"
			"\005value\030\002 \001(\0132$.testpb.TestMapMessage.Str"
			"ingWrapper:\0028\001\"\254\003\n\024TestFieldMaskMessage\022"
			"\014\n\004name\030\001 \001(\t\0227\n\003msg\030\002 \001(\0132*.testpb.Test"
			"FieldMaskMessage.NestedMessage\0228\n\004list\030\003"
			" \003(\0132*.testpb.TestFieldMaskMessage.Neste"
			"dMessage\0222\n\003kv1\030\004 \003(\0132%.testpb.TestField"
			"MaskMessage.Kv1Entry\0222\n\003kv2\030\005 \003(\0132%.test"
			"pb.TestFieldMaskMessage.Kv2Entry\032\'\n\rNest"
			"edMessage\022\n\n\002p1\030\001 \001(\003\022\n\n\002p2\030\002 \001(\r\032V\n\010Kv1"
			"Entry\022\013\n\003key\030\001 \001(\003\0229\n\005value\030\002 \001(\0132*.test"
			"pb.TestFieldMaskMessage.NestedMessage:\0028"
			"\001\032*\n\010Kv2Entry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001("
			"\t:\0028\001B*Z(channeld.clewcat.com/channeld/p"
			"kg/testpbb\006proto3"
		};
		::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
			descriptor, 1217);
		::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
			"test.proto", &protobuf_RegisterTypes);
		::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
	}

	void AddDescriptors() {
		static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
		::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
	}
	// Force AddDescriptors() to be called at dynamic initialization time.
	struct StaticDescriptorInitializer {
		StaticDescriptorInitializer() {
			AddDescriptors();
		}
	} static_descriptor_initializer;
}  // namespace protobuf_test_2eproto
namespace testpb {

	// ===================================================================

	void TestChannelDataMessage::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestChannelDataMessage::kTextFieldNumber;
	const int TestChannelDataMessage::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestChannelDataMessage::TestChannelDataMessage()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestChannelDataMessage();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestChannelDataMessage)
	}
	TestChannelDataMessage::TestChannelDataMessage(const TestChannelDataMessage& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (from.text().size() > 0) {
			text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
		}
		num_ = from.num_;
		// @@protoc_insertion_point(copy_constructor:testpb.TestChannelDataMessage)
	}

	void TestChannelDataMessage::SharedCtor() {
		text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		num_ = 0u;
		_cached_size_ = 0;
	}

	TestChannelDataMessage::~TestChannelDataMessage() {
		// @@protoc_insertion_point(destructor:testpb.TestChannelDataMessage)
		SharedDtor();
	}

	void TestChannelDataMessage::SharedDtor() {
		text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}

	void TestChannelDataMessage::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestChannelDataMessage::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestChannelDataMessage& TestChannelDataMessage::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestChannelDataMessage();
		return *internal_default_instance();
	}

	TestChannelDataMessage* TestChannelDataMessage::New(::google::protobuf::Arena* arena) const {
		TestChannelDataMessage* n = new TestChannelDataMessage;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestChannelDataMessage::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestChannelDataMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		num_ = 0u;
		_internal_metadata_.Clear();
	}

	bool TestChannelDataMessage::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestChannelDataMessage)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// string text = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_text()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->text().data(), static_cast<int>(this->text().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestChannelDataMessage.text"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // uint32 num = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
							input, &num_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestChannelDataMessage)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestChannelDataMessage)
		return false;
#undef DO_
	}

	void TestChannelDataMessage::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestChannelDataMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string text = 1;
		if (this->text().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->text().data(), static_cast<int>(this->text().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestChannelDataMessage.text");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				1, this->text(), output);
		}

		// uint32 num = 2;
		if (this->num() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestChannelDataMessage)
	}

	::google::protobuf::uint8* TestChannelDataMessage::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestChannelDataMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string text = 1;
		if (this->text().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->text().data(), static_cast<int>(this->text().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestChannelDataMessage.text");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					1, this->text(), target);
		}

		// uint32 num = 2;
		if (this->num() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestChannelDataMessage)
		return target;
	}

	size_t TestChannelDataMessage::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestChannelDataMessage)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// string text = 1;
		if (this->text().size() > 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->text());
		}

		// uint32 num = 2;
		if (this->num() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->num());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestChannelDataMessage::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestChannelDataMessage)
		GOOGLE_DCHECK_NE(&from, this);
		const TestChannelDataMessage* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestChannelDataMessage>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestChannelDataMessage)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestChannelDataMessage)
			MergeFrom(*source);
		}
	}

	void TestChannelDataMessage::MergeFrom(const TestChannelDataMessage& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestChannelDataMessage)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.text().size() > 0) {

			text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
		}
		if (from.num() != 0) {
			set_num(from.num());
		}
	}

	void TestChannelDataMessage::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestChannelDataMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestChannelDataMessage::CopyFrom(const TestChannelDataMessage& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestChannelDataMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestChannelDataMessage::IsInitialized() const {
		return true;
	}

	void TestChannelDataMessage::Swap(TestChannelDataMessage* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestChannelDataMessage::InternalSwap(TestChannelDataMessage* other) {
		using std::swap;
		text_.Swap(&other->text_);
		swap(num_, other->num_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestChannelDataMessage::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void TestAnyMessage_Type1::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestAnyMessage_Type1::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestAnyMessage_Type1::TestAnyMessage_Type1()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestAnyMessage_Type1();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestAnyMessage.Type1)
	}
	TestAnyMessage_Type1::TestAnyMessage_Type1(const TestAnyMessage_Type1& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (from.value().size() > 0) {
			value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
		}
		// @@protoc_insertion_point(copy_constructor:testpb.TestAnyMessage.Type1)
	}

	void TestAnyMessage_Type1::SharedCtor() {
		value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		_cached_size_ = 0;
	}

	TestAnyMessage_Type1::~TestAnyMessage_Type1() {
		// @@protoc_insertion_point(destructor:testpb.TestAnyMessage.Type1)
		SharedDtor();
	}

	void TestAnyMessage_Type1::SharedDtor() {
		value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}

	void TestAnyMessage_Type1::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestAnyMessage_Type1::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestAnyMessage_Type1& TestAnyMessage_Type1::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestAnyMessage_Type1();
		return *internal_default_instance();
	}

	TestAnyMessage_Type1* TestAnyMessage_Type1::New(::google::protobuf::Arena* arena) const {
		TestAnyMessage_Type1* n = new TestAnyMessage_Type1;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestAnyMessage_Type1::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestAnyMessage.Type1)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		_internal_metadata_.Clear();
	}

	bool TestAnyMessage_Type1::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestAnyMessage.Type1)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// string value = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_value()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->value().data(), static_cast<int>(this->value().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestAnyMessage.Type1.value"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestAnyMessage.Type1)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestAnyMessage.Type1)
		return false;
#undef DO_
	}

	void TestAnyMessage_Type1::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestAnyMessage.Type1)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string value = 1;
		if (this->value().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->value().data(), static_cast<int>(this->value().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestAnyMessage.Type1.value");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				1, this->value(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestAnyMessage.Type1)
	}

	::google::protobuf::uint8* TestAnyMessage_Type1::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestAnyMessage.Type1)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string value = 1;
		if (this->value().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->value().data(), static_cast<int>(this->value().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestAnyMessage.Type1.value");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					1, this->value(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestAnyMessage.Type1)
		return target;
	}

	size_t TestAnyMessage_Type1::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestAnyMessage.Type1)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// string value = 1;
		if (this->value().size() > 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->value());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestAnyMessage_Type1::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestAnyMessage.Type1)
		GOOGLE_DCHECK_NE(&from, this);
		const TestAnyMessage_Type1* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestAnyMessage_Type1>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestAnyMessage.Type1)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestAnyMessage.Type1)
			MergeFrom(*source);
		}
	}

	void TestAnyMessage_Type1::MergeFrom(const TestAnyMessage_Type1& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestAnyMessage.Type1)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.value().size() > 0) {

			value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
		}
	}

	void TestAnyMessage_Type1::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestAnyMessage.Type1)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestAnyMessage_Type1::CopyFrom(const TestAnyMessage_Type1& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestAnyMessage.Type1)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestAnyMessage_Type1::IsInitialized() const {
		return true;
	}

	void TestAnyMessage_Type1::Swap(TestAnyMessage_Type1* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestAnyMessage_Type1::InternalSwap(TestAnyMessage_Type1* other) {
		using std::swap;
		value_.Swap(&other->value_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestAnyMessage_Type1::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void TestAnyMessage_Type2::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestAnyMessage_Type2::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestAnyMessage_Type2::TestAnyMessage_Type2()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestAnyMessage_Type2();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestAnyMessage.Type2)
	}
	TestAnyMessage_Type2::TestAnyMessage_Type2(const TestAnyMessage_Type2& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		value_ = from.value_;
		// @@protoc_insertion_point(copy_constructor:testpb.TestAnyMessage.Type2)
	}

	void TestAnyMessage_Type2::SharedCtor() {
		value_ = GOOGLE_LONGLONG(0);
		_cached_size_ = 0;
	}

	TestAnyMessage_Type2::~TestAnyMessage_Type2() {
		// @@protoc_insertion_point(destructor:testpb.TestAnyMessage.Type2)
		SharedDtor();
	}

	void TestAnyMessage_Type2::SharedDtor() {
	}

	void TestAnyMessage_Type2::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestAnyMessage_Type2::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestAnyMessage_Type2& TestAnyMessage_Type2::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestAnyMessage_Type2();
		return *internal_default_instance();
	}

	TestAnyMessage_Type2* TestAnyMessage_Type2::New(::google::protobuf::Arena* arena) const {
		TestAnyMessage_Type2* n = new TestAnyMessage_Type2;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestAnyMessage_Type2::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestAnyMessage.Type2)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		value_ = GOOGLE_LONGLONG(0);
		_internal_metadata_.Clear();
	}

	bool TestAnyMessage_Type2::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestAnyMessage.Type2)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// int64 value = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
							input, &value_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestAnyMessage.Type2)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestAnyMessage.Type2)
		return false;
#undef DO_
	}

	void TestAnyMessage_Type2::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestAnyMessage.Type2)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int64 value = 1;
		if (this->value() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestAnyMessage.Type2)
	}

	::google::protobuf::uint8* TestAnyMessage_Type2::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestAnyMessage.Type2)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int64 value = 1;
		if (this->value() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestAnyMessage.Type2)
		return target;
	}

	size_t TestAnyMessage_Type2::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestAnyMessage.Type2)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// int64 value = 1;
		if (this->value() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::Int64Size(
					this->value());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestAnyMessage_Type2::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestAnyMessage.Type2)
		GOOGLE_DCHECK_NE(&from, this);
		const TestAnyMessage_Type2* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestAnyMessage_Type2>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestAnyMessage.Type2)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestAnyMessage.Type2)
			MergeFrom(*source);
		}
	}

	void TestAnyMessage_Type2::MergeFrom(const TestAnyMessage_Type2& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestAnyMessage.Type2)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.value() != 0) {
			set_value(from.value());
		}
	}

	void TestAnyMessage_Type2::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestAnyMessage.Type2)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestAnyMessage_Type2::CopyFrom(const TestAnyMessage_Type2& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestAnyMessage.Type2)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestAnyMessage_Type2::IsInitialized() const {
		return true;
	}

	void TestAnyMessage_Type2::Swap(TestAnyMessage_Type2* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestAnyMessage_Type2::InternalSwap(TestAnyMessage_Type2* other) {
		using std::swap;
		swap(value_, other->value_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestAnyMessage_Type2::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void TestAnyMessage::InitAsDefaultInstance() {
		::testpb::_TestAnyMessage_default_instance_._instance.get_mutable()->msg_ = const_cast<::google::protobuf::Any*>(
			::google::protobuf::Any::internal_default_instance());
	}
	void TestAnyMessage::clear_msg() {
		if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
			delete msg_;
		}
		msg_ = NULL;
	}
	void TestAnyMessage::clear_list() {
		list_.Clear();
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestAnyMessage::kMsgFieldNumber;
	const int TestAnyMessage::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestAnyMessage::TestAnyMessage()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestAnyMessage();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestAnyMessage)
	}
	TestAnyMessage::TestAnyMessage(const TestAnyMessage& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		list_(from.list_),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		if (from.has_msg()) {
			msg_ = new ::google::protobuf::Any(*from.msg_);
		}
		else {
			msg_ = NULL;
		}
		// @@protoc_insertion_point(copy_constructor:testpb.TestAnyMessage)
	}

	void TestAnyMessage::SharedCtor() {
		msg_ = NULL;
		_cached_size_ = 0;
	}

	TestAnyMessage::~TestAnyMessage() {
		// @@protoc_insertion_point(destructor:testpb.TestAnyMessage)
		SharedDtor();
	}

	void TestAnyMessage::SharedDtor() {
		if (this != internal_default_instance()) delete msg_;
	}

	void TestAnyMessage::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestAnyMessage::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestAnyMessage& TestAnyMessage::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestAnyMessage();
		return *internal_default_instance();
	}

	TestAnyMessage* TestAnyMessage::New(::google::protobuf::Arena* arena) const {
		TestAnyMessage* n = new TestAnyMessage;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestAnyMessage::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestAnyMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		list_.Clear();
		if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
			delete msg_;
		}
		msg_ = NULL;
		_internal_metadata_.Clear();
	}

	bool TestAnyMessage::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestAnyMessage)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// .google.protobuf.Any msg = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
						input, mutable_msg()));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // repeated .google.protobuf.Any list = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_list()));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestAnyMessage)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestAnyMessage)
		return false;
#undef DO_
	}

	void TestAnyMessage::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestAnyMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// .google.protobuf.Any msg = 1;
		if (this->has_msg()) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				1, *this->msg_, output);
		}

		// repeated .google.protobuf.Any list = 2;
		for (unsigned int i = 0,
			n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				2, this->list(static_cast<int>(i)), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestAnyMessage)
	}

	::google::protobuf::uint8* TestAnyMessage::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestAnyMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// .google.protobuf.Any msg = 1;
		if (this->has_msg()) {
			target = ::google::protobuf::internal::WireFormatLite::
				InternalWriteMessageToArray(
					1, *this->msg_, deterministic, target);
		}

		// repeated .google.protobuf.Any list = 2;
		for (unsigned int i = 0,
			n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
			target = ::google::protobuf::internal::WireFormatLite::
				InternalWriteMessageToArray(
					2, this->list(static_cast<int>(i)), deterministic, target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestAnyMessage)
		return target;
	}

	size_t TestAnyMessage::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestAnyMessage)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// repeated .google.protobuf.Any list = 2;
		{
			unsigned int count = static_cast<unsigned int>(this->list_size());
			total_size += 1UL * count;
			for (unsigned int i = 0; i < count; i++) {
				total_size +=
					::google::protobuf::internal::WireFormatLite::MessageSize(
						this->list(static_cast<int>(i)));
			}
		}

		// .google.protobuf.Any msg = 1;
		if (this->has_msg()) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::MessageSize(
					*this->msg_);
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestAnyMessage::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestAnyMessage)
		GOOGLE_DCHECK_NE(&from, this);
		const TestAnyMessage* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestAnyMessage>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestAnyMessage)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestAnyMessage)
			MergeFrom(*source);
		}
	}

	void TestAnyMessage::MergeFrom(const TestAnyMessage& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestAnyMessage)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		list_.MergeFrom(from.list_);
		if (from.has_msg()) {
			mutable_msg()->::google::protobuf::Any::MergeFrom(from.msg());
		}
	}

	void TestAnyMessage::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestAnyMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestAnyMessage::CopyFrom(const TestAnyMessage& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestAnyMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestAnyMessage::IsInitialized() const {
		return true;
	}

	void TestAnyMessage::Swap(TestAnyMessage* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestAnyMessage::InternalSwap(TestAnyMessage* other) {
		using std::swap;
		list_.InternalSwap(&other->list_);
		swap(msg_, other->msg_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestAnyMessage::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void TestMergeMessage_StringWrapper::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestMergeMessage_StringWrapper::kRemovedFieldNumber;
	const int TestMergeMessage_StringWrapper::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestMergeMessage_StringWrapper::TestMergeMessage_StringWrapper()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestMergeMessage_StringWrapper();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestMergeMessage.StringWrapper)
	}
	TestMergeMessage_StringWrapper::TestMergeMessage_StringWrapper(const TestMergeMessage_StringWrapper& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (from.content().size() > 0) {
			content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
		}
		removed_ = from.removed_;
		// @@protoc_insertion_point(copy_constructor:testpb.TestMergeMessage.StringWrapper)
	}

	void TestMergeMessage_StringWrapper::SharedCtor() {
		content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		removed_ = false;
		_cached_size_ = 0;
	}

	TestMergeMessage_StringWrapper::~TestMergeMessage_StringWrapper() {
		// @@protoc_insertion_point(destructor:testpb.TestMergeMessage.StringWrapper)
		SharedDtor();
	}

	void TestMergeMessage_StringWrapper::SharedDtor() {
		content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}

	void TestMergeMessage_StringWrapper::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestMergeMessage_StringWrapper::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestMergeMessage_StringWrapper& TestMergeMessage_StringWrapper::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestMergeMessage_StringWrapper();
		return *internal_default_instance();
	}

	TestMergeMessage_StringWrapper* TestMergeMessage_StringWrapper::New(::google::protobuf::Arena* arena) const {
		TestMergeMessage_StringWrapper* n = new TestMergeMessage_StringWrapper;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestMergeMessage_StringWrapper::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestMergeMessage.StringWrapper)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		removed_ = false;
		_internal_metadata_.Clear();
	}

	bool TestMergeMessage_StringWrapper::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestMergeMessage.StringWrapper)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// bool removed = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
							input, &removed_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // string content = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_content()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->content().data(), static_cast<int>(this->content().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestMergeMessage.StringWrapper.content"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestMergeMessage.StringWrapper)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestMergeMessage.StringWrapper)
		return false;
#undef DO_
	}

	void TestMergeMessage_StringWrapper::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestMergeMessage.StringWrapper)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// bool removed = 1;
		if (this->removed() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteBool(1, this->removed(), output);
		}

		// string content = 2;
		if (this->content().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->content().data(), static_cast<int>(this->content().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestMergeMessage.StringWrapper.content");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				2, this->content(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestMergeMessage.StringWrapper)
	}

	::google::protobuf::uint8* TestMergeMessage_StringWrapper::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestMergeMessage.StringWrapper)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// bool removed = 1;
		if (this->removed() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->removed(), target);
		}

		// string content = 2;
		if (this->content().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->content().data(), static_cast<int>(this->content().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestMergeMessage.StringWrapper.content");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					2, this->content(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestMergeMessage.StringWrapper)
		return target;
	}

	size_t TestMergeMessage_StringWrapper::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestMergeMessage.StringWrapper)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// string content = 2;
		if (this->content().size() > 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->content());
		}

		// bool removed = 1;
		if (this->removed() != 0) {
			total_size += 1 + 1;
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestMergeMessage_StringWrapper::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestMergeMessage.StringWrapper)
		GOOGLE_DCHECK_NE(&from, this);
		const TestMergeMessage_StringWrapper* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestMergeMessage_StringWrapper>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestMergeMessage.StringWrapper)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestMergeMessage.StringWrapper)
			MergeFrom(*source);
		}
	}

	void TestMergeMessage_StringWrapper::MergeFrom(const TestMergeMessage_StringWrapper& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestMergeMessage.StringWrapper)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.content().size() > 0) {

			content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
		}
		if (from.removed() != 0) {
			set_removed(from.removed());
		}
	}

	void TestMergeMessage_StringWrapper::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestMergeMessage.StringWrapper)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestMergeMessage_StringWrapper::CopyFrom(const TestMergeMessage_StringWrapper& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestMergeMessage.StringWrapper)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestMergeMessage_StringWrapper::IsInitialized() const {
		return true;
	}

	void TestMergeMessage_StringWrapper::Swap(TestMergeMessage_StringWrapper* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestMergeMessage_StringWrapper::InternalSwap(TestMergeMessage_StringWrapper* other) {
		using std::swap;
		content_.Swap(&other->content_);
		swap(removed_, other->removed_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestMergeMessage_StringWrapper::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	TestMergeMessage_KvEntry_DoNotUse::TestMergeMessage_KvEntry_DoNotUse() {}
	TestMergeMessage_KvEntry_DoNotUse::TestMergeMessage_KvEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
	void TestMergeMessage_KvEntry_DoNotUse::MergeFrom(const TestMergeMessage_KvEntry_DoNotUse& other) {
		MergeFromInternal(other);
	}
	::google::protobuf::Metadata TestMergeMessage_KvEntry_DoNotUse::GetMetadata() const {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[5];
	}
	void TestMergeMessage_KvEntry_DoNotUse::MergeFrom(
		const ::google::protobuf::Message& other) {
		::google::protobuf::Message::MergeFrom(other);
	}


	// ===================================================================

	void TestMergeMessage::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestMergeMessage::kListFieldNumber;
	const int TestMergeMessage::kKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestMergeMessage::TestMergeMessage()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestMergeMessage();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestMergeMessage)
	}
	TestMergeMessage::TestMergeMessage(const TestMergeMessage& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		list_(from.list_),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		kv_.MergeFrom(from.kv_);
		// @@protoc_insertion_point(copy_constructor:testpb.TestMergeMessage)
	}

	void TestMergeMessage::SharedCtor() {
		_cached_size_ = 0;
	}

	TestMergeMessage::~TestMergeMessage() {
		// @@protoc_insertion_point(destructor:testpb.TestMergeMessage)
		SharedDtor();
	}

	void TestMergeMessage::SharedDtor() {
	}

	void TestMergeMessage::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestMergeMessage::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestMergeMessage& TestMergeMessage::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestMergeMessage();
		return *internal_default_instance();
	}

	TestMergeMessage* TestMergeMessage::New(::google::protobuf::Arena* arena) const {
		TestMergeMessage* n = new TestMergeMessage;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestMergeMessage::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestMergeMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		list_.Clear();
		kv_.Clear();
		_internal_metadata_.Clear();
	}

	bool TestMergeMessage::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestMergeMessage)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// repeated string list = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->add_list()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->list(this->list_size() - 1).data(),
						static_cast<int>(this->list(this->list_size() - 1).length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestMergeMessage.list"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // map<int64, .testpb.TestMergeMessage.StringWrapper> kv = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					TestMergeMessage_KvEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
						TestMergeMessage_KvEntry_DoNotUse,
						::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper,
						::google::protobuf::internal::WireFormatLite::TYPE_INT64,
						::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
						0 >,
						::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper > > parser(&kv_);
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
						input, &parser));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestMergeMessage)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestMergeMessage)
		return false;
#undef DO_
	}

	void TestMergeMessage::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestMergeMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// repeated string list = 1;
		for (int i = 0, n = this->list_size(); i < n; i++) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->list(i).data(), static_cast<int>(this->list(i).length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestMergeMessage.list");
			::google::protobuf::internal::WireFormatLite::WriteString(
				1, this->list(i), output);
		}

		// map<int64, .testpb.TestMergeMessage.StringWrapper> kv = 2;
		if (!this->kv().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

			if (output->IsSerializationDeterministic() &&
				this->kv().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestMergeMessage_KvEntry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						2, *entry, output);
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestMergeMessage_KvEntry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it) {
					entry.reset(kv_.NewEntryWrapper(
						it->first, it->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						2, *entry, output);
				}
			}
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestMergeMessage)
	}

	::google::protobuf::uint8* TestMergeMessage::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestMergeMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// repeated string list = 1;
		for (int i = 0, n = this->list_size(); i < n; i++) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->list(i).data(), static_cast<int>(this->list(i).length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestMergeMessage.list");
			target = ::google::protobuf::internal::WireFormatLite::
				WriteStringToArray(1, this->list(i), target);
		}

		// map<int64, .testpb.TestMergeMessage.StringWrapper> kv = 2;
		if (!this->kv().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

			if (deterministic &&
				this->kv().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestMergeMessage_KvEntry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							2, *entry, deterministic, target);
					;
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestMergeMessage_KvEntry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it) {
					entry.reset(kv_.NewEntryWrapper(
						it->first, it->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							2, *entry, deterministic, target);
					;
				}
			}
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestMergeMessage)
		return target;
	}

	size_t TestMergeMessage::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestMergeMessage)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// repeated string list = 1;
		total_size += 1 *
			::google::protobuf::internal::FromIntSize(this->list_size());
		for (int i = 0, n = this->list_size(); i < n; i++) {
			total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
				this->list(i));
		}

		// map<int64, .testpb.TestMergeMessage.StringWrapper> kv = 2;
		total_size += 1 *
			::google::protobuf::internal::FromIntSize(this->kv_size());
		{
			::google::protobuf::scoped_ptr<TestMergeMessage_KvEntry_DoNotUse> entry;
			for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestMergeMessage_StringWrapper >::const_iterator
				it = this->kv().begin();
				it != this->kv().end(); ++it) {
				entry.reset(kv_.NewEntryWrapper(it->first, it->second));
				total_size += ::google::protobuf::internal::WireFormatLite::
					MessageSizeNoVirtual(*entry);
			}
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestMergeMessage::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestMergeMessage)
		GOOGLE_DCHECK_NE(&from, this);
		const TestMergeMessage* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestMergeMessage>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestMergeMessage)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestMergeMessage)
			MergeFrom(*source);
		}
	}

	void TestMergeMessage::MergeFrom(const TestMergeMessage& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestMergeMessage)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		list_.MergeFrom(from.list_);
		kv_.MergeFrom(from.kv_);
	}

	void TestMergeMessage::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestMergeMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestMergeMessage::CopyFrom(const TestMergeMessage& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestMergeMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestMergeMessage::IsInitialized() const {
		return true;
	}

	void TestMergeMessage::Swap(TestMergeMessage* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestMergeMessage::InternalSwap(TestMergeMessage* other) {
		using std::swap;
		list_.InternalSwap(&other->list_);
		kv_.Swap(&other->kv_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestMergeMessage::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	TestMapMessage_KvEntry_DoNotUse::TestMapMessage_KvEntry_DoNotUse() {}
	TestMapMessage_KvEntry_DoNotUse::TestMapMessage_KvEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
	void TestMapMessage_KvEntry_DoNotUse::MergeFrom(const TestMapMessage_KvEntry_DoNotUse& other) {
		MergeFromInternal(other);
	}
	::google::protobuf::Metadata TestMapMessage_KvEntry_DoNotUse::GetMetadata() const {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[7];
	}
	void TestMapMessage_KvEntry_DoNotUse::MergeFrom(
		const ::google::protobuf::Message& other) {
		::google::protobuf::Message::MergeFrom(other);
	}


	// ===================================================================

	void TestMapMessage_StringWrapper::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestMapMessage_StringWrapper::kContentFieldNumber;
	const int TestMapMessage_StringWrapper::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestMapMessage_StringWrapper::TestMapMessage_StringWrapper()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestMapMessage_StringWrapper();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestMapMessage.StringWrapper)
	}
	TestMapMessage_StringWrapper::TestMapMessage_StringWrapper(const TestMapMessage_StringWrapper& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (from.content().size() > 0) {
			content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
		}
		num_ = from.num_;
		// @@protoc_insertion_point(copy_constructor:testpb.TestMapMessage.StringWrapper)
	}

	void TestMapMessage_StringWrapper::SharedCtor() {
		content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		num_ = GOOGLE_LONGLONG(0);
		_cached_size_ = 0;
	}

	TestMapMessage_StringWrapper::~TestMapMessage_StringWrapper() {
		// @@protoc_insertion_point(destructor:testpb.TestMapMessage.StringWrapper)
		SharedDtor();
	}

	void TestMapMessage_StringWrapper::SharedDtor() {
		content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}

	void TestMapMessage_StringWrapper::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestMapMessage_StringWrapper::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestMapMessage_StringWrapper& TestMapMessage_StringWrapper::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestMapMessage_StringWrapper();
		return *internal_default_instance();
	}

	TestMapMessage_StringWrapper* TestMapMessage_StringWrapper::New(::google::protobuf::Arena* arena) const {
		TestMapMessage_StringWrapper* n = new TestMapMessage_StringWrapper;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestMapMessage_StringWrapper::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestMapMessage.StringWrapper)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		num_ = GOOGLE_LONGLONG(0);
		_internal_metadata_.Clear();
	}

	bool TestMapMessage_StringWrapper::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestMapMessage.StringWrapper)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// string content = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_content()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->content().data(), static_cast<int>(this->content().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestMapMessage.StringWrapper.content"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // int64 num = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
							input, &num_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestMapMessage.StringWrapper)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestMapMessage.StringWrapper)
		return false;
#undef DO_
	}

	void TestMapMessage_StringWrapper::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestMapMessage.StringWrapper)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string content = 1;
		if (this->content().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->content().data(), static_cast<int>(this->content().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestMapMessage.StringWrapper.content");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				1, this->content(), output);
		}

		// int64 num = 2;
		if (this->num() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->num(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestMapMessage.StringWrapper)
	}

	::google::protobuf::uint8* TestMapMessage_StringWrapper::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestMapMessage.StringWrapper)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string content = 1;
		if (this->content().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->content().data(), static_cast<int>(this->content().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestMapMessage.StringWrapper.content");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					1, this->content(), target);
		}

		// int64 num = 2;
		if (this->num() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->num(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestMapMessage.StringWrapper)
		return target;
	}

	size_t TestMapMessage_StringWrapper::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestMapMessage.StringWrapper)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// string content = 1;
		if (this->content().size() > 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->content());
		}

		// int64 num = 2;
		if (this->num() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::Int64Size(
					this->num());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestMapMessage_StringWrapper::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestMapMessage.StringWrapper)
		GOOGLE_DCHECK_NE(&from, this);
		const TestMapMessage_StringWrapper* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestMapMessage_StringWrapper>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestMapMessage.StringWrapper)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestMapMessage.StringWrapper)
			MergeFrom(*source);
		}
	}

	void TestMapMessage_StringWrapper::MergeFrom(const TestMapMessage_StringWrapper& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestMapMessage.StringWrapper)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.content().size() > 0) {

			content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
		}
		if (from.num() != 0) {
			set_num(from.num());
		}
	}

	void TestMapMessage_StringWrapper::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestMapMessage.StringWrapper)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestMapMessage_StringWrapper::CopyFrom(const TestMapMessage_StringWrapper& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestMapMessage.StringWrapper)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestMapMessage_StringWrapper::IsInitialized() const {
		return true;
	}

	void TestMapMessage_StringWrapper::Swap(TestMapMessage_StringWrapper* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestMapMessage_StringWrapper::InternalSwap(TestMapMessage_StringWrapper* other) {
		using std::swap;
		content_.Swap(&other->content_);
		swap(num_, other->num_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestMapMessage_StringWrapper::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	TestMapMessage_Kv2Entry_DoNotUse::TestMapMessage_Kv2Entry_DoNotUse() {}
	TestMapMessage_Kv2Entry_DoNotUse::TestMapMessage_Kv2Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
	void TestMapMessage_Kv2Entry_DoNotUse::MergeFrom(const TestMapMessage_Kv2Entry_DoNotUse& other) {
		MergeFromInternal(other);
	}
	::google::protobuf::Metadata TestMapMessage_Kv2Entry_DoNotUse::GetMetadata() const {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[9];
	}
	void TestMapMessage_Kv2Entry_DoNotUse::MergeFrom(
		const ::google::protobuf::Message& other) {
		::google::protobuf::Message::MergeFrom(other);
	}


	// ===================================================================

	void TestMapMessage::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestMapMessage::kKvFieldNumber;
	const int TestMapMessage::kKv2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestMapMessage::TestMapMessage()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestMapMessage();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestMapMessage)
	}
	TestMapMessage::TestMapMessage(const TestMapMessage& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		kv_.MergeFrom(from.kv_);
		kv2_.MergeFrom(from.kv2_);
		// @@protoc_insertion_point(copy_constructor:testpb.TestMapMessage)
	}

	void TestMapMessage::SharedCtor() {
		_cached_size_ = 0;
	}

	TestMapMessage::~TestMapMessage() {
		// @@protoc_insertion_point(destructor:testpb.TestMapMessage)
		SharedDtor();
	}

	void TestMapMessage::SharedDtor() {
	}

	void TestMapMessage::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestMapMessage::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestMapMessage& TestMapMessage::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestMapMessage();
		return *internal_default_instance();
	}

	TestMapMessage* TestMapMessage::New(::google::protobuf::Arena* arena) const {
		TestMapMessage* n = new TestMapMessage;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestMapMessage::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestMapMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		kv_.Clear();
		kv2_.Clear();
		_internal_metadata_.Clear();
	}

	bool TestMapMessage::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestMapMessage)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// map<uint32, string> kv = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					TestMapMessage_KvEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
						TestMapMessage_KvEntry_DoNotUse,
						::google::protobuf::uint32, ::std::string,
						::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
						::google::protobuf::internal::WireFormatLite::TYPE_STRING,
						0 >,
						::google::protobuf::Map< ::google::protobuf::uint32, ::std::string > > parser(&kv_);
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
						input, &parser));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						parser.value().data(), static_cast<int>(parser.value().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestMapMessage.KvEntry.value"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // map<uint32, .testpb.TestMapMessage.StringWrapper> kv2 = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					TestMapMessage_Kv2Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
						TestMapMessage_Kv2Entry_DoNotUse,
						::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper,
						::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
						::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
						0 >,
						::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper > > parser(&kv2_);
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
						input, &parser));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestMapMessage)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestMapMessage)
		return false;
#undef DO_
	}

	void TestMapMessage::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestMapMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// map<uint32, string> kv = 1;
		if (!this->kv().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
			struct Utf8Check {
				static void Check(ConstPtr p) {
					::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						p->second.data(), static_cast<int>(p->second.length()),
						::google::protobuf::internal::WireFormatLite::SERIALIZE,
						"testpb.TestMapMessage.KvEntry.value");
				}
			};

			if (output->IsSerializationDeterministic() &&
				this->kv().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestMapMessage_KvEntry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						1, *entry, output);
					Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestMapMessage_KvEntry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it) {
					entry.reset(kv_.NewEntryWrapper(
						it->first, it->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						1, *entry, output);
					Utf8Check::Check(&*it);
				}
			}
		}

		// map<uint32, .testpb.TestMapMessage.StringWrapper> kv2 = 2;
		if (!this->kv2().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

			if (output->IsSerializationDeterministic() &&
				this->kv2().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv2().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestMapMessage_Kv2Entry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv2_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						2, *entry, output);
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestMapMessage_Kv2Entry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it) {
					entry.reset(kv2_.NewEntryWrapper(
						it->first, it->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						2, *entry, output);
				}
			}
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestMapMessage)
	}

	::google::protobuf::uint8* TestMapMessage::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestMapMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// map<uint32, string> kv = 1;
		if (!this->kv().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
			struct Utf8Check {
				static void Check(ConstPtr p) {
					::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						p->second.data(), static_cast<int>(p->second.length()),
						::google::protobuf::internal::WireFormatLite::SERIALIZE,
						"testpb.TestMapMessage.KvEntry.value");
				}
			};

			if (deterministic &&
				this->kv().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestMapMessage_KvEntry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							1, *entry, deterministic, target);
					;
					Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestMapMessage_KvEntry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
					it = this->kv().begin();
					it != this->kv().end(); ++it) {
					entry.reset(kv_.NewEntryWrapper(
						it->first, it->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							1, *entry, deterministic, target);
					;
					Utf8Check::Check(&*it);
				}
			}
		}

		// map<uint32, .testpb.TestMapMessage.StringWrapper> kv2 = 2;
		if (!this->kv2().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

			if (deterministic &&
				this->kv2().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv2().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestMapMessage_Kv2Entry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv2_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							2, *entry, deterministic, target);
					;
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestMapMessage_Kv2Entry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it) {
					entry.reset(kv2_.NewEntryWrapper(
						it->first, it->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							2, *entry, deterministic, target);
					;
				}
			}
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestMapMessage)
		return target;
	}

	size_t TestMapMessage::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestMapMessage)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// map<uint32, string> kv = 1;
		total_size += 1 *
			::google::protobuf::internal::FromIntSize(this->kv_size());
		{
			::google::protobuf::scoped_ptr<TestMapMessage_KvEntry_DoNotUse> entry;
			for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
				it = this->kv().begin();
				it != this->kv().end(); ++it) {
				entry.reset(kv_.NewEntryWrapper(it->first, it->second));
				total_size += ::google::protobuf::internal::WireFormatLite::
					MessageSizeNoVirtual(*entry);
			}
		}

		// map<uint32, .testpb.TestMapMessage.StringWrapper> kv2 = 2;
		total_size += 1 *
			::google::protobuf::internal::FromIntSize(this->kv2_size());
		{
			::google::protobuf::scoped_ptr<TestMapMessage_Kv2Entry_DoNotUse> entry;
			for (::google::protobuf::Map< ::google::protobuf::uint32, ::testpb::TestMapMessage_StringWrapper >::const_iterator
				it = this->kv2().begin();
				it != this->kv2().end(); ++it) {
				entry.reset(kv2_.NewEntryWrapper(it->first, it->second));
				total_size += ::google::protobuf::internal::WireFormatLite::
					MessageSizeNoVirtual(*entry);
			}
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestMapMessage::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestMapMessage)
		GOOGLE_DCHECK_NE(&from, this);
		const TestMapMessage* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestMapMessage>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestMapMessage)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestMapMessage)
			MergeFrom(*source);
		}
	}

	void TestMapMessage::MergeFrom(const TestMapMessage& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestMapMessage)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		kv_.MergeFrom(from.kv_);
		kv2_.MergeFrom(from.kv2_);
	}

	void TestMapMessage::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestMapMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestMapMessage::CopyFrom(const TestMapMessage& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestMapMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestMapMessage::IsInitialized() const {
		return true;
	}

	void TestMapMessage::Swap(TestMapMessage* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestMapMessage::InternalSwap(TestMapMessage* other) {
		using std::swap;
		kv_.Swap(&other->kv_);
		kv2_.Swap(&other->kv2_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestMapMessage::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	void TestFieldMaskMessage_NestedMessage::InitAsDefaultInstance() {
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestFieldMaskMessage_NestedMessage::kP1FieldNumber;
	const int TestFieldMaskMessage_NestedMessage::kP2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestFieldMaskMessage_NestedMessage::TestFieldMaskMessage_NestedMessage()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage_NestedMessage();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestFieldMaskMessage.NestedMessage)
	}
	TestFieldMaskMessage_NestedMessage::TestFieldMaskMessage_NestedMessage(const TestFieldMaskMessage_NestedMessage& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::memcpy(&p1_, &from.p1_,
			static_cast<size_t>(reinterpret_cast<char*>(&p2_) -
				reinterpret_cast<char*>(&p1_)) + sizeof(p2_));
		// @@protoc_insertion_point(copy_constructor:testpb.TestFieldMaskMessage.NestedMessage)
	}

	void TestFieldMaskMessage_NestedMessage::SharedCtor() {
		::memset(&p1_, 0, static_cast<size_t>(
			reinterpret_cast<char*>(&p2_) -
			reinterpret_cast<char*>(&p1_)) + sizeof(p2_));
		_cached_size_ = 0;
	}

	TestFieldMaskMessage_NestedMessage::~TestFieldMaskMessage_NestedMessage() {
		// @@protoc_insertion_point(destructor:testpb.TestFieldMaskMessage.NestedMessage)
		SharedDtor();
	}

	void TestFieldMaskMessage_NestedMessage::SharedDtor() {
	}

	void TestFieldMaskMessage_NestedMessage::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestFieldMaskMessage_NestedMessage::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestFieldMaskMessage_NestedMessage& TestFieldMaskMessage_NestedMessage::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage_NestedMessage();
		return *internal_default_instance();
	}

	TestFieldMaskMessage_NestedMessage* TestFieldMaskMessage_NestedMessage::New(::google::protobuf::Arena* arena) const {
		TestFieldMaskMessage_NestedMessage* n = new TestFieldMaskMessage_NestedMessage;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestFieldMaskMessage_NestedMessage::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestFieldMaskMessage.NestedMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		::memset(&p1_, 0, static_cast<size_t>(
			reinterpret_cast<char*>(&p2_) -
			reinterpret_cast<char*>(&p1_)) + sizeof(p2_));
		_internal_metadata_.Clear();
	}

	bool TestFieldMaskMessage_NestedMessage::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestFieldMaskMessage.NestedMessage)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// int64 p1 = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
							input, &p1_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // uint32 p2 = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
							input, &p2_)));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestFieldMaskMessage.NestedMessage)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestFieldMaskMessage.NestedMessage)
		return false;
#undef DO_
	}

	void TestFieldMaskMessage_NestedMessage::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestFieldMaskMessage.NestedMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int64 p1 = 1;
		if (this->p1() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->p1(), output);
		}

		// uint32 p2 = 2;
		if (this->p2() != 0) {
			::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->p2(), output);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestFieldMaskMessage.NestedMessage)
	}

	::google::protobuf::uint8* TestFieldMaskMessage_NestedMessage::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestFieldMaskMessage.NestedMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// int64 p1 = 1;
		if (this->p1() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->p1(), target);
		}

		// uint32 p2 = 2;
		if (this->p2() != 0) {
			target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->p2(), target);
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestFieldMaskMessage.NestedMessage)
		return target;
	}

	size_t TestFieldMaskMessage_NestedMessage::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestFieldMaskMessage.NestedMessage)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// int64 p1 = 1;
		if (this->p1() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::Int64Size(
					this->p1());
		}

		// uint32 p2 = 2;
		if (this->p2() != 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->p2());
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestFieldMaskMessage_NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestFieldMaskMessage.NestedMessage)
		GOOGLE_DCHECK_NE(&from, this);
		const TestFieldMaskMessage_NestedMessage* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestFieldMaskMessage_NestedMessage>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestFieldMaskMessage.NestedMessage)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestFieldMaskMessage.NestedMessage)
			MergeFrom(*source);
		}
	}

	void TestFieldMaskMessage_NestedMessage::MergeFrom(const TestFieldMaskMessage_NestedMessage& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestFieldMaskMessage.NestedMessage)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		if (from.p1() != 0) {
			set_p1(from.p1());
		}
		if (from.p2() != 0) {
			set_p2(from.p2());
		}
	}

	void TestFieldMaskMessage_NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestFieldMaskMessage.NestedMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestFieldMaskMessage_NestedMessage::CopyFrom(const TestFieldMaskMessage_NestedMessage& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestFieldMaskMessage.NestedMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestFieldMaskMessage_NestedMessage::IsInitialized() const {
		return true;
	}

	void TestFieldMaskMessage_NestedMessage::Swap(TestFieldMaskMessage_NestedMessage* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestFieldMaskMessage_NestedMessage::InternalSwap(TestFieldMaskMessage_NestedMessage* other) {
		using std::swap;
		swap(p1_, other->p1_);
		swap(p2_, other->p2_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestFieldMaskMessage_NestedMessage::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// ===================================================================

	TestFieldMaskMessage_Kv1Entry_DoNotUse::TestFieldMaskMessage_Kv1Entry_DoNotUse() {}
	TestFieldMaskMessage_Kv1Entry_DoNotUse::TestFieldMaskMessage_Kv1Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
	void TestFieldMaskMessage_Kv1Entry_DoNotUse::MergeFrom(const TestFieldMaskMessage_Kv1Entry_DoNotUse& other) {
		MergeFromInternal(other);
	}
	::google::protobuf::Metadata TestFieldMaskMessage_Kv1Entry_DoNotUse::GetMetadata() const {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[12];
	}
	void TestFieldMaskMessage_Kv1Entry_DoNotUse::MergeFrom(
		const ::google::protobuf::Message& other) {
		::google::protobuf::Message::MergeFrom(other);
	}


	// ===================================================================

	TestFieldMaskMessage_Kv2Entry_DoNotUse::TestFieldMaskMessage_Kv2Entry_DoNotUse() {}
	TestFieldMaskMessage_Kv2Entry_DoNotUse::TestFieldMaskMessage_Kv2Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
	void TestFieldMaskMessage_Kv2Entry_DoNotUse::MergeFrom(const TestFieldMaskMessage_Kv2Entry_DoNotUse& other) {
		MergeFromInternal(other);
	}
	::google::protobuf::Metadata TestFieldMaskMessage_Kv2Entry_DoNotUse::GetMetadata() const {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[13];
	}
	void TestFieldMaskMessage_Kv2Entry_DoNotUse::MergeFrom(
		const ::google::protobuf::Message& other) {
		::google::protobuf::Message::MergeFrom(other);
	}


	// ===================================================================

	void TestFieldMaskMessage::InitAsDefaultInstance() {
		::testpb::_TestFieldMaskMessage_default_instance_._instance.get_mutable()->msg_ = const_cast<::testpb::TestFieldMaskMessage_NestedMessage*>(
			::testpb::TestFieldMaskMessage_NestedMessage::internal_default_instance());
	}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int TestFieldMaskMessage::kNameFieldNumber;
	const int TestFieldMaskMessage::kMsgFieldNumber;
	const int TestFieldMaskMessage::kListFieldNumber;
	const int TestFieldMaskMessage::kKv1FieldNumber;
	const int TestFieldMaskMessage::kKv2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	TestFieldMaskMessage::TestFieldMaskMessage()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
			::protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage();
		}
		SharedCtor();
		// @@protoc_insertion_point(constructor:testpb.TestFieldMaskMessage)
	}
	TestFieldMaskMessage::TestFieldMaskMessage(const TestFieldMaskMessage& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL),
		list_(from.list_),
		_cached_size_(0) {
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		kv1_.MergeFrom(from.kv1_);
		kv2_.MergeFrom(from.kv2_);
		name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (from.name().size() > 0) {
			name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
		}
		if (from.has_msg()) {
			msg_ = new ::testpb::TestFieldMaskMessage_NestedMessage(*from.msg_);
		}
		else {
			msg_ = NULL;
		}
		// @@protoc_insertion_point(copy_constructor:testpb.TestFieldMaskMessage)
	}

	void TestFieldMaskMessage::SharedCtor() {
		name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		msg_ = NULL;
		_cached_size_ = 0;
	}

	TestFieldMaskMessage::~TestFieldMaskMessage() {
		// @@protoc_insertion_point(destructor:testpb.TestFieldMaskMessage)
		SharedDtor();
	}

	void TestFieldMaskMessage::SharedDtor() {
		name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (this != internal_default_instance()) delete msg_;
	}

	void TestFieldMaskMessage::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* TestFieldMaskMessage::descriptor() {
		::protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
	}

	const TestFieldMaskMessage& TestFieldMaskMessage::default_instance() {
		::protobuf_test_2eproto::InitDefaultsTestFieldMaskMessage();
		return *internal_default_instance();
	}

	TestFieldMaskMessage* TestFieldMaskMessage::New(::google::protobuf::Arena* arena) const {
		TestFieldMaskMessage* n = new TestFieldMaskMessage;
		if (arena != NULL) {
			arena->Own(n);
		}
		return n;
	}

	void TestFieldMaskMessage::Clear() {
		// @@protoc_insertion_point(message_clear_start:testpb.TestFieldMaskMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		// Prevent compiler warnings about cached_has_bits being unused
		(void)cached_has_bits;

		list_.Clear();
		kv1_.Clear();
		kv2_.Clear();
		name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
			delete msg_;
		}
		msg_ = NULL;
		_internal_metadata_.Clear();
	}

	bool TestFieldMaskMessage::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:testpb.TestFieldMaskMessage)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// string name = 1;
			case 1: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_name()));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						this->name().data(), static_cast<int>(this->name().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestFieldMaskMessage.name"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // .testpb.TestFieldMaskMessage.NestedMessage msg = 2;
			case 2: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
						input, mutable_msg()));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // repeated .testpb.TestFieldMaskMessage.NestedMessage list = 3;
			case 3: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_list()));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // map<int64, .testpb.TestFieldMaskMessage.NestedMessage> kv1 = 4;
			case 4: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
					TestFieldMaskMessage_Kv1Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
						TestFieldMaskMessage_Kv1Entry_DoNotUse,
						::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage,
						::google::protobuf::internal::WireFormatLite::TYPE_INT64,
						::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
						0 >,
						::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage > > parser(&kv1_);
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
						input, &parser));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

				  // map<int64, string> kv2 = 5;
			case 5: {
				if (static_cast<::google::protobuf::uint8>(tag) ==
					static_cast<::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
					TestFieldMaskMessage_Kv2Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
						TestFieldMaskMessage_Kv2Entry_DoNotUse,
						::google::protobuf::int64, ::std::string,
						::google::protobuf::internal::WireFormatLite::TYPE_INT64,
						::google::protobuf::internal::WireFormatLite::TYPE_STRING,
						0 >,
						::google::protobuf::Map< ::google::protobuf::int64, ::std::string > > parser(&kv2_);
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
						input, &parser));
					DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						parser.value().data(), static_cast<int>(parser.value().length()),
						::google::protobuf::internal::WireFormatLite::PARSE,
						"testpb.TestFieldMaskMessage.Kv2Entry.value"));
				}
				else {
					goto handle_unusual;
				}
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, _internal_metadata_.mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:testpb.TestFieldMaskMessage)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:testpb.TestFieldMaskMessage)
		return false;
#undef DO_
	}

	void TestFieldMaskMessage::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:testpb.TestFieldMaskMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string name = 1;
		if (this->name().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->name().data(), static_cast<int>(this->name().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestFieldMaskMessage.name");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				1, this->name(), output);
		}

		// .testpb.TestFieldMaskMessage.NestedMessage msg = 2;
		if (this->has_msg()) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				2, *this->msg_, output);
		}

		// repeated .testpb.TestFieldMaskMessage.NestedMessage list = 3;
		for (unsigned int i = 0,
			n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				3, this->list(static_cast<int>(i)), output);
		}

		// map<int64, .testpb.TestFieldMaskMessage.NestedMessage> kv1 = 4;
		if (!this->kv1().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

			if (output->IsSerializationDeterministic() &&
				this->kv1().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv1().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::const_iterator
					it = this->kv1().begin();
					it != this->kv1().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv1Entry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv1_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						4, *entry, output);
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv1Entry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::const_iterator
					it = this->kv1().begin();
					it != this->kv1().end(); ++it) {
					entry.reset(kv1_.NewEntryWrapper(
						it->first, it->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						4, *entry, output);
				}
			}
		}

		// map<int64, string> kv2 = 5;
		if (!this->kv2().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
			struct Utf8Check {
				static void Check(ConstPtr p) {
					::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						p->second.data(), static_cast<int>(p->second.length()),
						::google::protobuf::internal::WireFormatLite::SERIALIZE,
						"testpb.TestFieldMaskMessage.Kv2Entry.value");
				}
			};

			if (output->IsSerializationDeterministic() &&
				this->kv2().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv2().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv2Entry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv2_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						5, *entry, output);
					Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv2Entry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it) {
					entry.reset(kv2_.NewEntryWrapper(
						it->first, it->second));
					::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
						5, *entry, output);
					Utf8Check::Check(&*it);
				}
			}
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), output);
		}
		// @@protoc_insertion_point(serialize_end:testpb.TestFieldMaskMessage)
	}

	::google::protobuf::uint8* TestFieldMaskMessage::InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const {
		(void)deterministic; // Unused
		// @@protoc_insertion_point(serialize_to_array_start:testpb.TestFieldMaskMessage)
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		// string name = 1;
		if (this->name().size() > 0) {
			::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
				this->name().data(), static_cast<int>(this->name().length()),
				::google::protobuf::internal::WireFormatLite::SERIALIZE,
				"testpb.TestFieldMaskMessage.name");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					1, this->name(), target);
		}

		// .testpb.TestFieldMaskMessage.NestedMessage msg = 2;
		if (this->has_msg()) {
			target = ::google::protobuf::internal::WireFormatLite::
				InternalWriteMessageToArray(
					2, *this->msg_, deterministic, target);
		}

		// repeated .testpb.TestFieldMaskMessage.NestedMessage list = 3;
		for (unsigned int i = 0,
			n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
			target = ::google::protobuf::internal::WireFormatLite::
				InternalWriteMessageToArray(
					3, this->list(static_cast<int>(i)), deterministic, target);
		}

		// map<int64, .testpb.TestFieldMaskMessage.NestedMessage> kv1 = 4;
		if (!this->kv1().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

			if (deterministic &&
				this->kv1().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv1().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::const_iterator
					it = this->kv1().begin();
					it != this->kv1().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv1Entry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv1_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							4, *entry, deterministic, target);
					;
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv1Entry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::const_iterator
					it = this->kv1().begin();
					it != this->kv1().end(); ++it) {
					entry.reset(kv1_.NewEntryWrapper(
						it->first, it->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							4, *entry, deterministic, target);
					;
				}
			}
		}

		// map<int64, string> kv2 = 5;
		if (!this->kv2().empty()) {
			typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_pointer
				ConstPtr;
			typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
			typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
			struct Utf8Check {
				static void Check(ConstPtr p) {
					::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
						p->second.data(), static_cast<int>(p->second.length()),
						::google::protobuf::internal::WireFormatLite::SERIALIZE,
						"testpb.TestFieldMaskMessage.Kv2Entry.value");
				}
			};

			if (deterministic &&
				this->kv2().size() > 1) {
				::google::protobuf::scoped_array<SortItem> items(
					new SortItem[this->kv2().size()]);
				typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::size_type size_type;
				size_type n = 0;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it, ++n) {
					items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
				}
				::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv2Entry_DoNotUse> entry;
				for (size_type i = 0; i < n; i++) {
					entry.reset(kv2_.NewEntryWrapper(
						items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							5, *entry, deterministic, target);
					;
					Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
				}
			}
			else {
				::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv2Entry_DoNotUse> entry;
				for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
					it = this->kv2().begin();
					it != this->kv2().end(); ++it) {
					entry.reset(kv2_.NewEntryWrapper(
						it->first, it->second));
					target = ::google::protobuf::internal::WireFormatLite::
						InternalWriteMessageNoVirtualToArray(
							5, *entry, deterministic, target);
					;
					Utf8Check::Check(&*it);
				}
			}
		}

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:testpb.TestFieldMaskMessage)
		return target;
	}

	size_t TestFieldMaskMessage::ByteSizeLong() const {
		// @@protoc_insertion_point(message_byte_size_start:testpb.TestFieldMaskMessage)
		size_t total_size = 0;

		if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					(::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields() : _internal_metadata_.default_instance()));
		}
		// repeated .testpb.TestFieldMaskMessage.NestedMessage list = 3;
		{
			unsigned int count = static_cast<unsigned int>(this->list_size());
			total_size += 1UL * count;
			for (unsigned int i = 0; i < count; i++) {
				total_size +=
					::google::protobuf::internal::WireFormatLite::MessageSize(
						this->list(static_cast<int>(i)));
			}
		}

		// map<int64, .testpb.TestFieldMaskMessage.NestedMessage> kv1 = 4;
		total_size += 1 *
			::google::protobuf::internal::FromIntSize(this->kv1_size());
		{
			::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv1Entry_DoNotUse> entry;
			for (::google::protobuf::Map< ::google::protobuf::int64, ::testpb::TestFieldMaskMessage_NestedMessage >::const_iterator
				it = this->kv1().begin();
				it != this->kv1().end(); ++it) {
				entry.reset(kv1_.NewEntryWrapper(it->first, it->second));
				total_size += ::google::protobuf::internal::WireFormatLite::
					MessageSizeNoVirtual(*entry);
			}
		}

		// map<int64, string> kv2 = 5;
		total_size += 1 *
			::google::protobuf::internal::FromIntSize(this->kv2_size());
		{
			::google::protobuf::scoped_ptr<TestFieldMaskMessage_Kv2Entry_DoNotUse> entry;
			for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
				it = this->kv2().begin();
				it != this->kv2().end(); ++it) {
				entry.reset(kv2_.NewEntryWrapper(it->first, it->second));
				total_size += ::google::protobuf::internal::WireFormatLite::
					MessageSizeNoVirtual(*entry);
			}
		}

		// string name = 1;
		if (this->name().size() > 0) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->name());
		}

		// .testpb.TestFieldMaskMessage.NestedMessage msg = 2;
		if (this->has_msg()) {
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::MessageSize(
					*this->msg_);
		}

		int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = cached_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void TestFieldMaskMessage::MergeFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_merge_from_start:testpb.TestFieldMaskMessage)
		GOOGLE_DCHECK_NE(&from, this);
		const TestFieldMaskMessage* source =
			::google::protobuf::internal::DynamicCastToGenerated<const TestFieldMaskMessage>(
				&from);
		if (source == NULL) {
			// @@protoc_insertion_point(generalized_merge_from_cast_fail:testpb.TestFieldMaskMessage)
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			// @@protoc_insertion_point(generalized_merge_from_cast_success:testpb.TestFieldMaskMessage)
			MergeFrom(*source);
		}
	}

	void TestFieldMaskMessage::MergeFrom(const TestFieldMaskMessage& from) {
		// @@protoc_insertion_point(class_specific_merge_from_start:testpb.TestFieldMaskMessage)
		GOOGLE_DCHECK_NE(&from, this);
		_internal_metadata_.MergeFrom(from._internal_metadata_);
		::google::protobuf::uint32 cached_has_bits = 0;
		(void)cached_has_bits;

		list_.MergeFrom(from.list_);
		kv1_.MergeFrom(from.kv1_);
		kv2_.MergeFrom(from.kv2_);
		if (from.name().size() > 0) {

			name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
		}
		if (from.has_msg()) {
			mutable_msg()->::testpb::TestFieldMaskMessage_NestedMessage::MergeFrom(from.msg());
		}
	}

	void TestFieldMaskMessage::CopyFrom(const ::google::protobuf::Message& from) {
		// @@protoc_insertion_point(generalized_copy_from_start:testpb.TestFieldMaskMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void TestFieldMaskMessage::CopyFrom(const TestFieldMaskMessage& from) {
		// @@protoc_insertion_point(class_specific_copy_from_start:testpb.TestFieldMaskMessage)
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool TestFieldMaskMessage::IsInitialized() const {
		return true;
	}

	void TestFieldMaskMessage::Swap(TestFieldMaskMessage* other) {
		if (other == this) return;
		InternalSwap(other);
	}
	void TestFieldMaskMessage::InternalSwap(TestFieldMaskMessage* other) {
		using std::swap;
		list_.InternalSwap(&other->list_);
		kv1_.Swap(&other->kv1_);
		kv2_.Swap(&other->kv2_);
		name_.Swap(&other->name_);
		swap(msg_, other->msg_);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata TestFieldMaskMessage::GetMetadata() const {
		protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
		return ::protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
	}


	// @@protoc_insertion_point(namespace_scope)
}  // namespace testpb

// @@protoc_insertion_point(global_scope)
